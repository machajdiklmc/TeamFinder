@page "/events"
@using TeamFinder.Client.Services
@using TeamFinder.Shared.Models
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject HttpClient _http
@inject EventsService _eventsService
<PageTitle>Events</PageTitle>

<h1>Events</h1>

@if (_events == null)
{
    <p><em>@LoadingMessage</em></p>
}
else if (_events.Count == 0)
{
    <p><em>@LoadingMessage</em></p>
    <MatButton Link="createevent">Create event now</MatButton>
}
else
{
    <MatPaginator Length="_events.Count()" PageSize="@pageSize" Page="@OnPage">a</MatPaginator>
    <EventView SportEvents="_events" ViewRange="@ViewRange" By="4"/>
}

@code {
    int pageSize = 25;
    int pageIndex = 0;
    string LoadingMessage = "Loading...";
    Range ViewRange => new (pageIndex*pageSize, pageIndex*pageSize + pageSize);
    void OnPage(MatPaginatorPageEvent e)
    {
        pageSize = e.PageSize;
        pageIndex = e.PageIndex;
    }

    private List<SportEvent>? _events;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _events = await _eventsService.GetEvents();
            if (_events!.Count == 0)
                LoadingMessage = "No events were found.";
        }
        catch (AccessTokenNotAvailableException)
        {
            LoadingMessage = "Unauthorized";
        }
        catch
        {
            if (_events == null)
            {
                LoadingMessage = "Error while getting events";
            }
        }
    }
}
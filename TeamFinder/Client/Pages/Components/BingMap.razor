@using MatBlazor
@using Microsoft.Extensions.Options
@using TeamFinder.Shared.Models
@inject IJSRuntime JSRuntime
@inject IConfiguration Configuration

<MatPaper Outlined="true" Rounded="true">
    <div id="@GetUniqueId(Id)" style="@($"height:{Height}px;")"></div>

    <script suppress-error="BL9992" type="text/javascript">
        Loader.async = true;      	      
    </script>
</MatPaper>

@code { string GetUniqueId(int id) => Id == -1 ? "map" : "map-" + Convert.ToString(Id);

    [Parameter, EditorRequired]
    public int Height { get; set; } 

    [Parameter]
    public SportEvent SportEvent { get; set; }
    
    [Parameter]
    public bool IsSimpleMap { get; set; }
    
    [Parameter]
    public int Id { get; set; }
    //Configuration? Configuration;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (IsSimpleMap)
                await DrawSimpleMap();
            else
                await DrawMap();
        }
    }

    private async Task DrawSimpleMap()
    {
        await JSRuntime.InvokeVoidAsync("simpleMap", SportEvent.Location.Longitude, SportEvent.Location.Latitude,GetUniqueId(Id));
    }

    private async Task DrawMap()
    {
        await JSRuntime.InvokeVoidAsync("initMap", SportEvent.Location.Longitude, SportEvent.Location.Latitude, GetUniqueId(Id));
    }

}
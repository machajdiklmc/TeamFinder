@using MatBlazor
@using Microsoft.Extensions.Options
@using TeamFinder.Shared.Models
@inject IJSRuntime JSRuntime
@inject IConfiguration Configuration
@inject IOptions<BingOptions> bing

<HeadContent>

</HeadContent>

<MatPaper Outlined="true" Rounded="true">
    <div id="@UniqueId" style="@($"height:{Height}px;")"></div>
    <script suppress-error="BL9992" type="text/javascript">Loader.load();</script>
    <script suppress-error="BL9992" type="text/javascript">
    	Loader.async = true;
        
    		var stred = SMap.Coords.fromWGS84(14.41, 50.08);
    		var mapa = new SMap(JAK.gel('@UniqueId'), stred, 10);
    		mapa.addDefaultLayer(SMap.DEF_BASE).enable();
    		mapa.addDefaultControls();	      	      
    </script>
</MatPaper>

@code {
    [Parameter, EditorRequired]
    public int Height { get; set; } 

    [Parameter]
    public SportEvent SportEvent { get; set; }

    [Parameter]
    public int UniqueId { get; set; }
    //Configuration? Configuration;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
    
       // SportEvent.OnCountIdChanged += SportEventOnOnCountIdChanged;
        await SportEventOnOnCountIdChanged();
    }

    private async Task SportEventOnOnCountIdChanged()
    {
        try
        {
          /*  if (SportEvent.CountId is null)
                UniqueId = "map";
            else
                UniqueId = "map" + SportEvent.CountId;*/

            Console.WriteLine(UniqueId);

            //await JSRuntime.InvokeVoidAsync("load");
            //await JSRuntime.InvokeVoidAsync("createMap", timeout: TimeSpan.FromMilliseconds(1000), SportEvent.Latitude, SportEvent.Longitude, UniqueId);
        }
        catch (Exception e)
        {
            Console.WriteLine(UniqueId);
            Console.WriteLine(e);
        }
    }

}